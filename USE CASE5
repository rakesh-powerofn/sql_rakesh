1. Write an SQL query to display the book details with the respective author name.
ANS - SELECT BOOK.NAME AS BOOK_NAME,BOOK.ISBN AS ISBN,BOOK.EDITION AS EDITION,AUTHOR.FIRST_NAME AS FIRST_NAME,AUTHOR.LAST_NAME AS LAST_NAME 
FROM BOOK_DETAILS JOIN BOOK ON BOOK_DETAILS.BOOK_ID=BOOK.ID JOIN AUTHOR ON BOOK_DETAILS.AUTHOR_ID=AUTHOR.ID 
GROUP BY BOOK_DETAILS.BOOK_ID;
2:05
2. Write an SQL query to find out the books with the word ‘programming’ in their names.
ANS - 
SELECT BOOK.NAME AS BOOK_NAME,AUTHOR.ID AS AUTHOR_ID,AUTHOR.FIRST_NAME AS AUTHOR_NAME 
FROM BOOK_DETAILS JOIN BOOK ON BOOK_DETAILS.BOOK_ID=BOOK.ID JOIN AUTHOR ON BOOK_DETAILS.AUTHOR_ID=AUTHOR.ID 
WHERE BOOK.NAME LIKE '%programming%';

3.Find the books that are not returned before the due date.
ANS- 
SELECT BOOK.NAME AS BOOK_NAME,BOOK_REQUEST.DUE_DATE,CUSTOMER.NAME AS CUSTOMER_NAME 
FROM BOOK_REQUEST JOIN CUSTOMER ON BOOK_REQUEST.CUSTOMER_ID=CUSTOMER.ID JOIN BOOK ON BOOK_REQUEST.BOOK_ID=BOOK.ID 
WHERE BOOK_REQUEST.IS_ACTIVE='0';

4. Find all the unique entries in the book table.
ANS - SELECT DISTINCT NAME,ISBN,EDITION FROM BOOK;
5
ANS:
select B.NAME as BOOK_NAME,C.NAME as CUSTOMER_NAME,L.NAME as LIBRARIAN_NAME from BOOK B joi
n BOOK_REQUEST R on B.ID=R.BOOK_ID join CUSTOMER C on R.CUSTOMER_ID=C.ID join LIBRARIANS L on R.LIBRARIAN_ID=L.ID l
imit 3;

7. Write an SQL query to display the librarian name and number of books they distributed to the customers.
ANS - 
SELECT LIBRARIANS.NAME AS LIBRARIAN_NAME,COUNT(BOOK_ID) AS NO_OF_BOOKS 
FROM BOOK_REQUEST JOIN LIBRARIANS ON BOOK_REQUEST.LIBRARIAN_ID=LIBRARIANS.ID 
GRO BY LIBRARIANS.NAME;

8.Find the customer who has borrowed multiple copies of the same book. 				
ANS;
select C.NAME AS CUSTOMER_NAME,B.NAME AS BOOK_NAME,B.EDITION AS BOOK_EDITION,A.FIRST_NAME A
S AUTHOR_FIRST_NAME FROM BOOK B JOIN BOOK_REQUEST R ON B.ID=R.BOOK_ID JOIN CUSTOMER C ON R.CUSTOMER_ID=C.ID JOIN BO
OK_DETAILS D ON B.ID=D.BOOK_ID  JOIN AUTHOR A ON D.AUTHOR_ID=A.ID GROUP BY CUSTOMER_NAME,BOOK_NAME HAVING COUNT(BOO
K_NAME)>1;


9.Find the customers who haven’t borrowed any books from the library. Display the table as given below.
ANS -
SELECT DISTINCT CUSTOMER.ID AS ID,CUSTOMER.NAME AS NAME,CUSTOMER.ADDRESS AS ADDRESS FROM CUSTOMER WHERE CUSTOMER.ID NOT IN(SELECT DISTINCT CUSTOMER.ID AS ID FROM CUSTOMER RIGHT JOIN BOOK_REQUEST ON CUSTOMER.ID=BOOK_REQUEST.CUSTOMER_ID);
